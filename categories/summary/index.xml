<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Summary on True Me </title>
    <link>https://zetaoyang.github.io/categories/summary/</link>
    <description>Recent content in Summary on True Me </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Zetao的小站</copyright>
    <lastBuildDate>Sat, 08 Oct 2016 11:04:19 +0800</lastBuildDate>
    <atom:link href="https://zetaoyang.github.io/categories/summary/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>用Github API 上传文件的方法</title>
      <link>https://zetaoyang.github.io/post/post-01/</link>
      <pubDate>Sat, 08 Oct 2016 11:04:19 +0800</pubDate>
      
      <guid>https://zetaoyang.github.io/post/post-01/</guid>
      <description>&lt;p&gt;前几天，在V2EX看见有人用Github API基于python实现了一个图床。于是我决定用nodejs也实现一个类似功能。首先我看有没现成的第三方库，在 &lt;a href=&#34;https://developer.github.com/libraries/&#34;&gt;Libraries | GitHub Developer Guide&lt;/a&gt; 我发现有5个跟javascript相关的库：&lt;br /&gt;
&lt;img src=&#34;https://cdn.rawgit.com/qanno/qanno.github.io/master/images/github-api-js.png&#34; alt=&#34;github-api-js.jpg&#34; /&gt;&lt;br /&gt;
&lt;div align=center&gt;
&lt;img src=&#34;https://cdn.rawgit.com/qanno/qanno.github.io/master/images/github-api-js.png&#34;  alt=&#34;亦菲表演机器猫&#34;/&gt;
&lt;/div&gt;
经调研发现 &lt;a href=&#34;https://github.com/michael/github&#34;&gt;GitHub.js wrapper around the GitHub API&lt;/a&gt; 比较好入手，基本将Github API 全都实现了，并且封装了自己的接口，但是缺点还是有的，文档写的不太详细。然后就开始看它的文档，其中Repository的writeFile()方法就是上传文件的函数。&lt;br /&gt;
其中writeFile():&lt;br /&gt;
&lt;img src=&#34;https://cdn.rawgit.com/qanno/qanno.github.io/master/images/github-api-writeFile-2.3.0.png&#34; alt=&#34;github-api-writeFile-2.3.0.png&#34; /&gt;&lt;br /&gt;
　　 这里先贴出代码(ECMAScript 2015标准)：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//导入github-api
var GitHub = require(&amp;quot;github-api&amp;quot;)
var fs = require(&amp;quot;fs&amp;quot;)

const gh = new GitHub({
	token: &#39;&amp;lt;your personal token&amp;gt;&#39;//这里采用token认证
})

var branch = &#39;&amp;lt;branch_name&amp;gt;&#39;//eg. master
var ufilePath = &#39;&amp;lt;repo_path&amp;gt;&#39;//eg. images/
//{master}/xxx.jpg
var ufileName = &#39;&amp;lt;file_name&amp;gt;&#39;//eg. xxx.jpg
var commit = &#39;here i am&#39;
var user = &#39;&amp;lt;user name&amp;gt;&#39;//用户名
var repo = &#39;&amp;lt;repository name&amp;gt;&#39;//仓库名

const re = gh.getRepo(user,repo)

//同步读取文件
var imageBlob = fs.readFileSync(&#39;&amp;lt;filepath&amp;gt;&#39;)
//base64编码
var imageB64 = imageBlob.toString(&#39;base64&#39;)
//ascii编码
//utf8编码也可以，只不过有些浪费。
var data = imageB64.toString(&#39;ascii&#39;)

var options = {
    //author:{},
    //commiter:{},
    encode: false
}

re.writeFile(branch, ufilePath + ufileName, data , commit,options, (error,result,request)=&amp;gt;{
    if (error===null) {	console.log(`https://cdn.rawgit.com/${user}/${repo}/${branch}/${ufilePath}${ufileName}`)
	 }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这其中的关键就是编码问题， GitHub Contents API 要求content是base64编码。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>